// automatically generated by Xtext
grammar com.city.network.xtext.CityDsl with org.eclipse.xtext.common.Terminals

import "http://com.city.network/1.0"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

City returns City:
	{City}
	'City'
	name=EString
	'{'
	('location' '('('longitude' longitude=EDouble)
	('latitude' latitude=EDouble)
	('altitude' altitude=EFloat) ')')?
	('country' country=EString)?
	( stations+=Station (stations+=Station)* )?
	( lines+=Line (lines+=Line)* )?
	'}';

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;

EString returns ecore::EString:
	STRING | ID;

Station returns Station:
	'Station'
	name=ID '{'
	('location' '('('longitude' longitude=EDouble)
	('latitude' latitude=EDouble)
	('altitude' altitude=EFloat) ')')?
	
	(office?='hasOffice')?
	(opened?='isOpened')?
	(disabledAccess?='hasDisabledAccess')?
	'type' type+=TransportType ("," type+=TransportType)*
	('nbOfTicketMachines' nbOfTicketMachines=EInt)?
	('nbOfElevators' nbOfElevators=EInt)?
	('zone' zone=EInt)? '}';

Line returns Line:
	{Line}
	'Line'
	name=ID '{'
	('of' type=TransportType)?
	('topology' topology=Topology)?
	('stations' '(' stations+=[Station|ID] ("," stations+=[Station|ID])* ')')?
	'}';

enum TransportType returns TransportType:
	BUS='BUS' | METRO='METRO' | TRAIN='TRAIN' | TRAMWAY='TRAMWAY';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

EInt returns ecore::EInt:
	'-'? INT;

enum Topology returns Topology:
	LINEAR='LINEAR' | CIRCULAR='CIRCULAR';
