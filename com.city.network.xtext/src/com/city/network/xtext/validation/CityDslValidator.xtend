/*
 * generated by Xtext 2.15.0
 */
package com.city.network.xtext.validation

import com.city.network.Line
import com.city.network.NetworkPackage
import com.city.network.Topology
import org.eclipse.xtext.validation.Check
import com.city.network.MNetworkPackage

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class CityDslValidator extends AbstractCityDslValidator {
	
		public static val NOT_CIRCULAR = 'notCircular'
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					CityDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	
	@Check
	def checkCircular(Line l)
	{
		
		if (l.topology == Topology.CIRCULAR && l.stations.head != l.stations.last)
		  warning('A circular line must have the same first and last stations', 
		  	MNetworkPackage.Literals.LINE__STATIONS, NOT_CIRCULAR)
		  
		
	}
	
}
